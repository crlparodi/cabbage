services:
  cabbage:
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile 
    image: cabbage:0.4.0
    env_file:
      - ".env"
    networks:
      - cabbage
    working_dir: /usr/src/cabbage
    ports:
      - "5000:5000"
    command: bash -c "bash migrate.sh && bash run.sh"
    volumes:
      - app-volume:/usr/src/cabbage/dist
  web:
    depends_on:
      cabbage:
        condition: service_started
    image: nginx
    volumes:
      - app-volume:/app/static
      - ./config/cabbage.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=cabbage.salad
      - NGINX_PORT=80
    networks:
      - cabbage
  celery:
    build:
      context: .
      dockerfile: Dockerfile 
    command: /opt/env/bin/celery -A core worker -l INFO
    working_dir: /usr/src/cabbage
    env_file:
      - ".env"
    depends_on:
      cabbage:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - cabbage
  redis:
    image: redis
    ports:
    - "6379:6379"
    networks:
      - cabbage
  postgres_db:
    image: postgres:16-alpine3.18
    command: -p 5434
    env_file:
      - ".env"
    expose:
      - 5434
    ports:
      - "5434:5434"
    networks:
      - cabbage
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres -p 5434" ] 
      interval: 5s
      timeout: 20s
      retries: 3
networks:
  cabbage:
      driver: bridge
volumes:
  app-volume: